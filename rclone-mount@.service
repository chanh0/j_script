# Rclone mount on boot
# this file name -  'rclone-mount@.service'
# this file located at /lib/systemd/system/rclone-mount@.service 
# Copy file to: /lib/systemd/system
# You need to create a remote on RClone and a folder on your disk, both with same name <rclone-remote>
# This example uses /cloud/ folder as origin to mount all remotes, change it to your needs
# This example use a linux user named rclone. Create it or adapt it to your needs. Rclone will get config from that user's home folder
# Register new service by typing:
# sudo systemctl daemon-reload
# Do the next one for every remote you want to load on boot
# sudo systemctl enable rclone-mount@<rclone-remote>.service
# systemctl start rclone-mount@<rclone-remote>.service
# Usage:
# To unmount drive use
# systemctl stop rclone-mount@<rclone-remote>.service
# To mount use:
# systemctl start rclone-mount@<rclone-remote>.service
# To disable mount on boot use:
# systemctl disable rclone-mount@<rclone-remote>.service


[Unit]
Description=rclone FUSE mount for %i
Documentation=http://rclone.org/docs/
After=network-online.target
Wants=network-online.target 
# This is only needed if you use an external USB hard drive in order to wait for it to be mounted
# Mount point in my system is on a USB drive, don't ask why :))), that's why I have to wait for it to get mounted
#Requires=externo.mount

[Service]
#CHANGE LOG
#2020-09-20 add log file and log level line 
#2021-01-16 add -rc features , add more remark
Type=notify
Environment=RCLONE_CONFIG=/root/.config/rclone/rclone.conf
KillMode=none
RestartSec=5
ExecStart=/usr/bin/rclone mount %i: /mnt/g/%i \
# This is for allowing users other than the user running rclone access to the mount
--allow-other \
# Google Drive is a polling remote so this value can be set very high and any changes are detected via polling.
# 2021-01-21 48h to 1000h
--dir-cache-time=100h \
# The log level output 
--log-level NOTICE \
# Location of the log file
--log-file=/root/rmount.log \
# I reduce the poll interval down to 15 seconds as this makes changes appear fast the API quotas per day are huge
--poll-interval 15s \
# This is setting the file permission on the mount to user and group have the same access and other can read
--umask 002 \
# This sets up the remote control daemon so you can issue rc commands locally
--rc \
# This is the default port it runs on
--rc-addr :5572 \
# no-auth is used as no one else uses my server and it is not a shared seedbox
--rc-no-auth \
# The local disk used for caching
--cache-dir /home/rclone/vfs_cache \
# This is used for caching files to local disk for streaming
#--vfs-cache-mode full \
# This limits the cache size to the value below
#--vfs-cache-max-size 500G \
# This limits the age in the cache if the size is reached and it removes the oldest files first
#--vfs-cache-max-age 336h \
# This sets a per file bandwidth control and I limit this to a little bigger than my largest bitrate I'd want to play
#--bwlimit-file 40M
--vfs-read-chunk-size=10M \
--vfs-read-chunk-size-limit=512M \
--drive-chunk-size=128M \
--timeout 1h \
--file-perms 0777 \

ExecStop=/bin/fusermount -uz /mnt/g/%i
Restart=on-failure


[Install]
WantedBy=multi-user.target
